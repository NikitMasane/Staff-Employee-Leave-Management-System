{"version":3,"file":"static/js/552.21f34552.chunk.js","mappings":"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","sources":["APIRequest/UserRequest.js","components/Ui/PageTitle.js","pages/Profile/ChangePasswordPage.jsx","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js"],"sourcesContent":["//Internal Import\r\nimport SessionHelper from \"../helpers/SessionHelper\";\r\nimport ToastMessage from \"../helpers/ToastMessage\";\r\nimport { SetUserDetails } from \"../redux/slices/UserSlice\";\r\nimport store from \"../redux/store/store\";\r\nimport RestClient from \"./RestClient\";\r\n\r\nclass UserRequest {\r\n  static async ProfileDetails() {\r\n    const { data } = await RestClient.getRequest(\"/Employee/ProfileDetails\");\r\n    if (data) {\r\n      store.dispatch(SetUserDetails(data?.[0]));\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async SendRecoveryOtp(Email) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/SendRecoveryOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      SessionHelper.SetRecoverVerifyEmail(Email);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyRecoveryOtp(Otp) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/Employee/VerifyRecoveryOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      SessionHelper.SetRecoverVerifyOTP(Otp);\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async RecoveryResetPass(PostBody) {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    const Otp = SessionHelper.GetRecoverVerifyOTP();\r\n    const { data } = await RestClient.postRequest(\r\n      `/Employee/RecoveryResetPass/${Email}/${Otp}`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountSentOtp() {\r\n    const Email = SessionHelper.GetRecoverVerifyEmail();\r\n    console.log(Email);\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountSentOtp/${Email}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async VerifyAccountVerifyOtp(Email, Otp) {\r\n    const { data } = await RestClient.getRequest(\r\n      `/User/VerifyAccountVerifyOtp/${Email}/${Otp}`,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async ProfileUpdate(PostBody) {\r\n    const { data } = await RestClient.updateRequest(\r\n      `/Employee/ProfileUpdate`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  static async EmployeeChangePassword(PostBody) {\r\n    const { data } = await RestClient.putRequest(\r\n      `/Employee/EmployeeChangePassword`,\r\n      PostBody,\r\n    );\r\n    if (data) {\r\n      ToastMessage.successMessage(data?.message);\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserRequest;\r\n","// @flow\r\nimport React from \"react\";\r\nimport { Row, Col, Breadcrumb } from \"react-bootstrap\";\r\n\r\ntype BreadcrumbItems = {\r\n  label: string,\r\n  path: string,\r\n  active?: boolean,\r\n};\r\n\r\ntype PageTitleProps = {\r\n  breadCrumbItems: Array<BreadcrumbItems>,\r\n  title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"page-title-box\">\r\n          <div className=\"page-title-right\">\r\n            <Breadcrumb listProps={{ className: \"m-0\" }}>\r\n              <Breadcrumb.Item href=\"/dashboard\">Dashboard</Breadcrumb.Item>\r\n\r\n              {props.breadCrumbItems.map((item, index) => {\r\n                return item.active ? (\r\n                  <Breadcrumb.Item active key={index}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                ) : (\r\n                  <Breadcrumb.Item key={index} href={item.path}>\r\n                    {item.label}\r\n                  </Breadcrumb.Item>\r\n                );\r\n              })}\r\n            </Breadcrumb>\r\n          </div>\r\n          <h4 className=\"page-title\">{props.title}</h4>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","//External Lib Import\r\nimport { useSelector } from \"react-redux\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n//Internal Lib Import\r\nimport PageTitle from \"../../components/Ui/PageTitle\";\r\nimport { FormInput } from \"../../components/Ui\";\r\nimport { VerticalForm } from \"../../components/Ui\";\r\nimport UserRequest from \"../../APIRequest/UserRequest\";\r\n\r\nconst ChangePasswordPage = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  /*\r\n   * form validation schema\r\n   */\r\n  const validationSchema = yup.object().shape({\r\n    PreviousPassword: yup.string().required(\"Please Enter Previous Password\"),\r\n    NewPassword: yup.string().required(\"Please Enter New Password\"),\r\n    PasswordConfirmation: yup\r\n      .string()\r\n      .required(\"Please Enter Confirm Password\")\r\n      .oneOf([yup.ref(\"NewPassword\"), null], \"Passwords must match\"),\r\n  });\r\n\r\n  /**\r\n   * Handle the form submission\r\n   */\r\n  const CreateUpdateEmployee = (values) => {\r\n    UserRequest.EmployeeChangePassword({\r\n      PreviousPassword: values.PreviousPassword,\r\n      NewPassword: values.NewPassword,\r\n    }).then((result) => {\r\n      if (result) {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"Setting\", path: \"/dashboard\" },\r\n          {\r\n            label: \"Update Setting\",\r\n            path: \"/dashboard\",\r\n            active: true,\r\n          },\r\n        ]}\r\n        title=\"Update Password\"\r\n      />\r\n\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col>\r\n                  <VerticalForm\r\n                    onSubmit={CreateUpdateEmployee}\r\n                    validationSchema={validationSchema}\r\n                    defaultValues={{\r\n                      PreviousPassword: \"\",\r\n                      NewPassword: \"\",\r\n                      PasswordConfirmation: \"\",\r\n                    }}\r\n                  >\r\n                    <Row>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"PreviousPassword\"\r\n                          label={t(\"Previous Password\")}\r\n                          placeholder={t(\"Enter Previous Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"NewPassword\"\r\n                          label={t(\"New Password\")}\r\n                          placeholder={t(\"Enter New Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                      <Col sm={12}>\r\n                        <FormInput\r\n                          name=\"PasswordConfirmation\"\r\n                          label={t(\"Confirm New Password\")}\r\n                          placeholder={t(\"Enter Confirm New Password\")}\r\n                          containerClass={\"mb-3\"}\r\n                          type=\"password\"\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-2\">\r\n                      <Col>\r\n                        <Button type=\"submit\" variant=\"success\">\r\n                          Update Profile\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </VerticalForm>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordPage;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});"],"names":["UserRequest","RestClient","data","store","SetUserDetails","Email","ToastMessage","message","SessionHelper","Otp","console","log","PostBody","props","className","listProps","href","breadCrumbItems","map","item","index","active","label","path","title","t","useTranslation","navigate","useNavigate","validationSchema","yup","shape","PreviousPassword","required","NewPassword","PasswordConfirmation","oneOf","onSubmit","values","then","result","defaultValues","sm","name","placeholder","containerClass","type","variant","BreadcrumbItem","React","ref","bsPrefix","children","as","Component","linkAs","LinkComponent","Anchor","linkProps","target","prefix","useBootstrapPrefix","_jsx","classNames","undefined","displayName","defaultProps","Breadcrumb","Object","assign","Item"],"sourceRoot":""}